"use strict";(self.webpackChunk_tokenstreet_react_native_extended_stylesheet_website=self.webpackChunk_tokenstreet_react_native_extended_stylesheet_website||[]).push([[207],{876:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),b=a,m=p["".concat(o,".").concat(b)]||p[b]||d[b]||l;return n?r.createElement(m,s(s({ref:t},u),{},{components:n})):r.createElement(m,s({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,s=new Array(l);s[0]=b;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<l;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},1643:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=n(7896),a=(n(2784),n(876));const l={sidebar_position:5},s="EStyleSheet API",i={unversionedId:"api",id:"api",title:"EStyleSheet API",description:".create()",source:"@site/docs/api.md",sourceDirName:".",slug:"/api",permalink:"/react-native-extended-stylesheet/docs/api",draft:!1,editUrl:"https://github.com/tokenstreet-tech/react-native-extended-stylesheet/tree/main/packages/website/docs/api.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Features",permalink:"/react-native-extended-stylesheet/docs/features"},next:{title:"Caveats",permalink:"/react-native-extended-stylesheet/docs/caveats"}},o={},c=[{value:".create()",id:"create",level:2},{value:".build()",id:"build",level:2},{value:".value()",id:"value",level:2},{value:".child()",id:"child",level:2},{value:".subscribe()",id:"subscribe",level:2},{value:".unsubscribe()",id:"unsubscribe",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"estylesheet-api"},"EStyleSheet API"),(0,a.kt)("h2",{id:"create"},".create()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"/**\n * Creates extended stylesheet object\n *\n * @param {Object} source style\n * @returns {Object} extended stylesheet object\n */\n create (source) {...}\n")),(0,a.kt)("h2",{id:"build"},".build()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"/**\n * Calculates all stylesheets\n *\n * @param {Object} [globalVars] global variables for all stylesheets\n */\n build (globalVars) {...}\n")),(0,a.kt)("h2",{id:"value"},".value()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"/**\n * Calculates particular expression.\n *\n * @param {*} value\n * @param {String} [prop] property for which value is calculated. For example, to calculate percent values\n * the function should know is it 'width' or 'height' to use proper reference value.\n * @returns {*} calculated result\n */\n value (value, prop) {...}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Please note")," that in most cases ",(0,a.kt)("inlineCode",{parentName:"p"},"EStyleSheet.value()")," should be used inside function, not directly:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"const styles = EStyleSheet.create({\n    button1: {\n        width: () => EStyleSheet.value('$contentWidth') + 10, // <-- Correct!\n    },\n    button2: {\n        width: EStyleSheet.value('$contentWidth') + 10, // <-- Incorrect. Because EStyleSheet.build() may occur later and $contentWidth will be undefined at this moment.\n    },\n});\n")),(0,a.kt)("h2",{id:"child"},".child()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"/**\n * Returns styles with pseudo classes :first-child, :nth-child-even, :last-child according to index and count\n *\n * @param {Object} stylesheet\n * @param {String} styleName\n * @param {Number} index index of item for style\n * @param {Number} count total count of items\n * @returns {Object|Array} styles\n */\n child (styles, styleName, index, count) {...}\n")),(0,a.kt)("h2",{id:"subscribe"},".subscribe()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"/**\n * Subscribe to event. Currently only 'build' event is supported.\n *\n * @param {String} event\n * @param {Function} listener\n */\n subscribe (event, listener) {...}\n\n")),(0,a.kt)("p",null,"This method is useful when you want to pre-render some component on init.\nAs extended style is calculated after call of ",(0,a.kt)("inlineCode",{parentName:"p"},"EStyleSheet.build()"),",\nit is not available instantly after creation so you should wrap pre-render\ninfo listener to ",(0,a.kt)("inlineCode",{parentName:"p"},"build")," event:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"const styles = EStyleSheet.create({\n    button: {\n        width: '80%',\n    },\n});\n\n// this will NOT work as styles.button is not calculated yet\nlet Button = <View style={styles.button}></View>;\n\n// but this will work\nlet Button;\nEStyleSheet.subscribe('build', () => {\n    Button = <View style={styles.button}></View>;\n});\n")),(0,a.kt)("h2",{id:"unsubscribe"},".unsubscribe()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"/**\n * Unsubscribe from event. Currently only 'build' event is supported.\n *\n * @param {String} event\n * @param {Function} listener\n */\n unsubscribe (event, listener) {...}\n\n")),(0,a.kt)("p",null,"Unsubscribe from event."))}d.isMDXComponent=!0}}]);