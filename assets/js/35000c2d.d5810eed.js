"use strict";(self.webpackChunk_tokenstreet_react_native_extended_stylesheet_website=self.webpackChunk_tokenstreet_react_native_extended_stylesheet_website||[]).push([[310],{8295:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"caveats","title":"Caveats","description":"1. Dynamic theme change is possible only with loosing components local state","source":"@site/docs/caveats.md","sourceDirName":".","slug":"/caveats","permalink":"/react-native-extended-stylesheet/docs/caveats","draft":false,"unlisted":false,"editUrl":"https://github.com/tokenstreet-tech/react-native-extended-stylesheet/tree/main/packages/website/docs/caveats.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"EStyleSheet","permalink":"/react-native-extended-stylesheet/docs/api/variables/EStyleSheet"},"next":{"title":"FAQ","permalink":"/react-native-extended-stylesheet/docs/faq"}}');var a=n(1085),r=n(1184);const o={sidebar_position:5},i="Caveats",c={},l=[];function d(e){const t={a:"a",blockquote:"blockquote",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"caveats",children:"Caveats"})}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Dynamic theme change is possible only with loosing components local state"}),"\nWhen theme styles are re-calculated - all components should be re-rendered.\nCurrently it can be done via re-mounting components tree, please see [#47]."]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["Note: it is not issue if you are using state container like ",(0,a.jsx)(t.a,{href:"https://github.com/reactjs/redux",children:"Redux"}),"\nand can easily re-render app in the same state"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Dynamic orientation change is not supported"}),"\nPlease see [#9] for more details."]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Old RN versions (< 0.43) can crash the app with percent values"}),"\nRN >= 0.43 supports percent values natively ([#32]) and EStyleSheet since 0.5.0 just proxy percent values to RN as is ([#77]) to keep things simple.\nOlder RN versions (< 0.43) can't process percents and EStyleSheet process such values.\nSo if you are using RN < 0.43, you should stick to EStyleSheet@0.4.0."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1184:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var s=n(4041);const a={},r=s.createContext(a);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);